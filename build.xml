<?xml version="1.0" encoding="UTF-8"?>
<project default="clean" basedir="." name="infinispan-extension">
  <description>
        Build Infinispan Extension
    </description>

  <property name="lib" location="source/java/lib"/>
  <property name="src" location="source/java/src"/>
  <property name="temp" location="temp"/>
  <property name="build" location="build"/>
  <property name="dist"  location="target"/>

  <path id="classpath">
    <fileset dir="${lib}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <target name="init">
    
    <!-- Create the time stamp -->
    <tstamp/>
    
    <delete dir="${temp}"/>
    <delete dir="${dist}"/>

    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${temp}"/>
    <mkdir dir="${temp}/classes"/>
    <mkdir dir="${temp}/jars"/>
    <mkdir dir="${dist}"/>

    
    <tstamp>
     <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss" />
    </tstamp>
  </target>
  


  <target name="compile" depends="init"
        description="compile the source " >

    <javac srcdir="${src}" source="11" target="11" destdir="${temp}/classes"  debug="true" debuglevel="lines,vars,source">
      <classpath refid="classpath" />
    </javac>

    <jar jarfile="${temp}/jars/${bundlename}-${bundleversion}.jar" basedir="${temp}/classes" manifest="${src}/META-INF/MANIFEST.MF">
      <manifest>
        <attribute name="Bundle-Version" value="${bundleversion}"/>
        <attribute name="Built-Date" value="${NOW}"/>
        <attribute name="Bundle-SymbolicName" value="${bundlename}"/>
      </manifest>
    </jar>

    <delete dir="${temp}/classes"/>
  </target>



  <target name="distModern" depends="compile" description="copy source file to temp" >
    

    <!-- Manifest of the extension -->
    <echo file="${dist}/extension2/META-INF/MANIFEST.MF">Manifest-Version: 1.0
Built-Date: ${NOW}
version: "${bundleversion}"
id: "${id}"
name: "${label}"
description: "${description}"
start-bundles: false
lucee-core-version: "${luceeCoreVersion}‚Äù
release-type: ${releaseType}
cache: "[{'class':'${classRemote}','bundleName':'${bundlename}','bundleVersion':'${bundleversion}'}]"
</echo>


    <!-- copy the jars necessary -->
    <copy todir="${dist}/extension2/jars">
      <fileset dir="${lib}">
        <include name="**/*.jar"/>
        <exclude name="**/javax.servlet.jar"/>
        <exclude name="**/lucee*.jar"/>
        <!-- EMBEDDED -->
        <exclude name="**/org.infinispan.core-*.jar"/>
        <exclude name="**/jboss-transaction-api_1.1_spec-*.jar"/>
        <exclude name="**/org.lucee.metainf-services-*.jar"/>
        <exclude name="**/org.jgroups-*.jar"/>
      </fileset>
    </copy>

    <!-- copy the jar just build -->
    <copy todir="${dist}/extension2/jars">
      <fileset dir="${temp}/jars/">
        <include name="**/*.jar"/>
      </fileset>
    </copy>
    
    <!-- copy the tlds necessary -->
    <copy 
      file="${build}/context/admin/cdriver/${nameRemote}.cfc" 
      tofile="${dist}/extension2/context/admin/cdriver/${nameRemote}.cfc" />

    <replaceregexp 
      file="${dist}/extension2/context/admin/cdriver/${nameRemote}.cfc" 
      match="\{class\}" 
      replace="${classRemote}" 
      byline="true"/>
    <replaceregexp 
      file="${dist}/extension2/context/admin/cdriver/${nameRemote}.cfc" 
      match="\{label\}" 
      replace="${labelRemote}" 
      byline="true"/>
    <replaceregexp 
      file="${dist}/extension2/context/admin/cdriver/${nameRemote}.cfc" 
      match="\{desc\}" 
      replace="${descriptionRemote}" 
      byline="true"/>
    <replaceregexp 
      file="${dist}/extension2/context/admin/cdriver/${nameRemote}.cfc" 
      match="\{bundlename\}" 
      replace="${bundlename}" 
      byline="true"/>
    <replaceregexp 
      file="${dist}/extension2/context/admin/cdriver/${nameRemote}.cfc" 
      match="\{bundleversion\}" 
      replace="${bundleversion}" 
      byline="true"/>




    <!-- copy the logo -->
    <copy todir="${dist}/extension2/META-INF">
      <fileset dir="${build}/images">
        <include name="logo.png"/>
      </fileset>
    </copy>



    <!-- Zip everything  -->
     <zip destfile="${dist}/${filename}-${bundleversion}.lex">
        <zipfileset dir="${dist}/extension2"/>
    </zip>
    
  </target>


  <target name="buildModern"  depends="distModern" description="clean up" >
    <!-- <delete dir="${dist}/extension2"/> -->
  </target>

  <target name="clean" depends="buildModern" description="clean up" >
    <delete dir="${temp}"/>
    <delete dir="${dist}/extension2"/>
  </target>

</project>